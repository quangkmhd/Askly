#!/usr/bin/env python3
"""
Test script for Askly chatbot functionality.
"""

import os
import sys

# Add the project root to Python path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from askly import AsklyBot


def test_basic_functionality():
    """Test basic chatbot functionality."""
    print("üß™ B·∫Øt ƒë·∫ßu ki·ªÉm tra ch·ª©c nƒÉng c∆° b·∫£n...")
    
    # Initialize chatbot
    bot = AsklyBot()
    
    # Test 1: Load a document
    print("\n1Ô∏è‚É£ Ki·ªÉm tra t·∫£i t√†i li·ªáu...")
    test_file = "examples/documents/ai_education.txt"
    
    if not os.path.exists(test_file):
        print(f"‚ùå File ki·ªÉm tra kh√¥ng t·ªìn t·∫°i: {test_file}")
        return False
    
    result = bot.load_document(test_file)
    if result['status'] != 'success':
        print(f"‚ùå L·ªói khi t·∫£i t√†i li·ªáu: {result['message']}")
        return False
    
    print(f"‚úÖ ƒê√£ t·∫£i th√†nh c√¥ng: {result['document_info']['filename']}")
    print(f"   S·ªë t·ª´: {result['document_info']['word_count']}")
    
    # Test 2: Ask a question
    print("\n2Ô∏è‚É£ Ki·ªÉm tra h·ªèi ƒë√°p...")
    question = "AI trong gi√°o d·ª•c c√≥ l·ª£i √≠ch g√¨?"
    result = bot.ask_question(question)
    
    if result['status'] != 'success':
        print(f"‚ùå L·ªói khi h·ªèi ƒë√°p: {result.get('answer', 'Kh√¥ng c√≥ th√¥ng tin')}")
        return False
    
    print(f"‚úÖ C√¢u h·ªèi: {question}")
    print(f"   Tr·∫£ l·ªùi: {result['answer']}")
    print(f"   ƒê·ªô tin c·∫≠y: {result['confidence']:.2f}")
    
    # Test 3: Extract information
    print("\n3Ô∏è‚É£ Ki·ªÉm tra tr√≠ch xu·∫•t th√¥ng tin...")
    query = "chatbot"
    result = bot.extract_information(query)
    
    if result['status'] != 'success':
        print(f"‚ùå L·ªói khi tr√≠ch xu·∫•t: {result['message']}")
        return False
    
    print(f"‚úÖ Truy v·∫•n: {query}")
    print(f"   T√¨m th·∫•y: {result['total_results']} k·∫øt qu·∫£")
    
    if result['results']:
        print(f"   K·∫øt qu·∫£ ƒë·∫ßu ti√™n: {result['results'][0]['text'][:100]}...")
    
    # Test 4: Get summary
    print("\n4Ô∏è‚É£ Ki·ªÉm tra t√≥m t·∫Øt...")
    result = bot.get_document_summary()
    
    if result['status'] != 'success':
        print(f"‚ùå L·ªói khi l·∫•y t√≥m t·∫Øt: {result['message']}")
        return False
    
    summary = result['summary']
    print(f"‚úÖ T·ªïng s·ªë t√†i li·ªáu: {summary['total_documents']}")
    print(f"   T·ªïng s·ªë t·ª´: {summary['total_words']}")
    
    print("\nüéâ T·∫•t c·∫£ ki·ªÉm tra ƒë·ªÅu th√†nh c√¥ng!")
    return True


def test_document_loading():
    """Test loading multiple documents."""
    print("\nüß™ Ki·ªÉm tra t·∫£i nhi·ªÅu t√†i li·ªáu...")
    
    bot = AsklyBot()
    
    # Test loading directory
    docs_dir = "examples/documents"
    if os.path.exists(docs_dir):
        result = bot.load_documents_from_directory(docs_dir)
        
        if result['status'] == 'success':
            print(f"‚úÖ ƒê√£ t·∫£i {len(result['loaded_files'])} t√†i li·ªáu t·ª´ th∆∞ m·ª•c")
            print(f"   C√°c file: {', '.join(result['loaded_files'])}")
            
            # Test with multiple documents
            question = "Ph√°t tri·ªÉn b·ªÅn v·ªØng l√† g√¨?"
            result = bot.ask_question(question)
            
            if result['status'] == 'success':
                print(f"‚úÖ C√¢u h·ªèi v·ªõi nhi·ªÅu t√†i li·ªáu th√†nh c√¥ng")
                print(f"   Tr·∫£ l·ªùi: {result['answer']}")
            else:
                print(f"‚ùå L·ªói khi h·ªèi v·ªõi nhi·ªÅu t√†i li·ªáu: {result['answer']}")
        else:
            print(f"‚ùå L·ªói khi t·∫£i th∆∞ m·ª•c: {result['message']}")
    else:
        print(f"‚ùå Th∆∞ m·ª•c t√†i li·ªáu kh√¥ng t·ªìn t·∫°i: {docs_dir}")


def test_error_handling():
    """Test error handling."""
    print("\nüß™ Ki·ªÉm tra x·ª≠ l√Ω l·ªói...")
    
    bot = AsklyBot()
    
    # Test asking question without documents
    result = bot.ask_question("Test question")
    if "t√†i li·ªáu" in result['answer'].lower():
        print("‚úÖ X·ª≠ l√Ω l·ªói khi ch∆∞a t·∫£i t√†i li·ªáu: OK")
    else:
        print("‚ùå X·ª≠ l√Ω l·ªói kh√¥ng ƒë√∫ng")
    
    # Test loading non-existent file
    result = bot.load_document("non_existent_file.txt")
    if result['status'] == 'error':
        print("‚úÖ X·ª≠ l√Ω l·ªói file kh√¥ng t·ªìn t·∫°i: OK")
    else:
        print("‚ùå Kh√¥ng ph√°t hi·ªán file kh√¥ng t·ªìn t·∫°i")


def main():
    """Run all tests."""
    print("üöÄ B·∫ÆT ƒê·∫¶U KI·ªÇM TRA ASKLY CHATBOT")
    print("=" * 50)
    
    try:
        # Run basic tests
        if not test_basic_functionality():
            print("‚ùå Ki·ªÉm tra c∆° b·∫£n th·∫•t b·∫°i")
            return False
        
        # Test multiple documents
        test_document_loading()
        
        # Test error handling
        test_error_handling()
        
        print("\nüéä T·∫§T C·∫¢ KI·ªÇM TRA HO√ÄN TH√ÄNH!")
        return True
        
    except Exception as e:
        print(f"\nüí• L·ªói trong qu√° tr√¨nh ki·ªÉm tra: {str(e)}")
        import traceback
        traceback.print_exc()
        return False


if __name__ == '__main__':
    success = main()
    sys.exit(0 if success else 1)